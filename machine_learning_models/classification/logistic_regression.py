# -*- coding: utf-8 -*-
"""Logistic Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YsNovkm6KC1g09s1mBhjT0y91SD_RbFH
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import sklearn as skl
from statistics import mean

" Importing the dataset "

dataset = pd.read_csv('../../data/seasons/winner/2010-2018.csv')
X = dataset.iloc[:, 5:-1].values
y = dataset.iloc[:, -1].values

" Splitting the dataset into the Training set and Test set "

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

" Feature Scaling "

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

" Training the Logistic Regression model on the Training set "

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state = 0)
classifier.fit(X_train, y_train)

" Predicting a new result "

# print(classifier.predict(sc.transform([[113.1, 111.1, 0.4654999999999999, 0.37170000000000003, 0.8198000000000001, 43.9, 12.9, 5.8, 0.3, 1516.9609920473383, 105.3, 108.2, 0.44279999999999997, 0.36429999999999996, 0.7499999999999998, 43.7, 15.2, 4.7, 0.8, 1496.2140416710959]])))

" Predicting the Test set results "

y_pred = classifier.predict(X_test)
# print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

" Cross Validation Score "

from sklearn.model_selection import cross_val_score

print("Predictions for the test set with the cross validation score")
crossValScores = cross_val_score(classifier, X_test, y_test)
print(mean(crossValScores), crossValScores)

" Making the Confusion Matrix "

from sklearn.metrics import confusion_matrix, accuracy_score
print("Predictions for the test set")
cm = confusion_matrix(y_test, y_pred)
print(cm)
print(accuracy_score(y_test, y_pred))