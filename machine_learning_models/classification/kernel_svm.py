# -*- coding: utf-8 -*-
"""Kernel SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Js5adzU1SMaVLJ_OM8hWwIjvQv3OBZZT
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from statistics import mean
import import_data_helper as idh

def kernel_svm(season = '2018-2018'):

    " Importing the dataset "
    
    dataset, X, y, X_train, X_test, y_train, y_test = idh.import_data_classification(season)
    
    " Training the model on the Training set "
    
    from sklearn.svm import SVC
    classifier = SVC(kernel = 'rbf', random_state = 0)
    classifier.fit(X_train, y_train.ravel())
    
    " Predicting a new result "
    
    # print(classifier.predict(sc.transform([[30,87000]])))
    
    " Predicting the Test set results "
    
    y_pred = classifier.predict(X_test)
    # print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))
    
    " Cross Validation Score "
    
    from sklearn.model_selection import cross_val_score
    
    # print("Predictions for the test set with the cross validation score")
    crossValScores = cross_val_score(classifier, X_test, y_test.ravel())
    # print(mean(crossValScores), crossValScores)
    
    " Making the Confusion Matrix "
    
    from sklearn.metrics import confusion_matrix, accuracy_score
    # print("Predictions for the test set")
    cm = confusion_matrix(y_test, y_pred)
    acc_score = accuracy_score(y_test, y_pred)
    # print(cm)
    # print(acc_score)
    
    return cm, acc_score
    
if __name__ == "__main__":
    kernel_svm()